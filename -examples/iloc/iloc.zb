
`int`: ['-', '+']? ['0'-'9']+;

`float`: ['0'-'9']+ '.' ['0'-'9']+;

`string`: '\"' ([~ '\\' '\"' ] | '\\' ['0' - '7']+)* '\"';

`register`: "%vr"['0'-'9']+;

`label`: '.' ['a'-'z', 'A'-'Z', '_']+ ['a'-'z', 'A'-'Z', '_', '0'-'9']*;

`ws`: [' ', '\t', '\n'] | "#" [~'\n']* "\n";

%token_skip: ws; // inner-token skip

%skip: ws; // bewteen-token skip

%start: `
	".data" (
		  ".string" label "," string
		| ".float"  label "," float
		| ".global" label "," int "," int
	)*
	".text" (
		".frame" ['a' - 'z']+ "," int (
			(label ":")? // optional label
			(
				// Integer Arithmetic Instructions:
				  "i2i"      register              "=>" register
				| "add"      register "," register "=>" register
				| "sub"      register "," register "=>" register
				| "mult"     register "," register "=>" register
				| "lshift"   register "," register "=>" register
				| "rshift"   register "," register "=>" register
				| "mod"      register "," register "=>" register
				| "and"      register "," register "=>" register
				| "or"       register "," register "=>" register
				| "not"      register              "=>" register
				| "addI"     register "," int      "=>" register
				| "subI"     register "," int      "=>" register
				| "multI"    register "," int      "=>" register
				| "lshiftI"  register "," int      "=>" register
				| "rshiftI"  register "," int      "=>" register
				
				// Integer Memory Operations:
				| "loadI"    int                   "=>" register
				| "load"     register              "=>" register
				| "loadAI"   register "," int      "=>" register
				| "loadAO"   register "," register "=>" register
				| "store"    register              "=>" register
				| "storeAI"  register              "=>" register "," int
				| "storeAO"  register              "=>" register "," register
				
				// Compare Instructions:
				| "cmp_LT"   register "," register "=>" register
				| "cmp_LR"   register "," register "=>" register
				| "cmp_GT"   register "," register "=>" register
				| "cmp_GE"   register "," register "=>" register
				| "cmp_EQ"   register "," register "=>" register
				| "cmp_NE"   register "," register "=>" register
				| "comp"     register "," register "=>" register
				| "testeq"   register              "=>" register
				| "testne"   register              "=>" register
				| "testgt"   register              "=>" register
				| "testge"   register              "=>" register
				| "testlt"   register              "=>" register
				| "testle"   register              "=>" register
				
				// Floating-point Operations:
				| "f2i"      register              "=>" register
				| "i2f"      register              "=>" register
				| "f2f"      register              "=>" register
				| "fadd"     register "," register "=>" register
				| "fsub"     register "," register "=>" register
				| "fmult"    register "," register "=>" register
				| "fdiv"     register "," register "=>" register
				| "fcomp"    register "," register "=>" register
				| "fload"    register              "=>" register
				| "floadAI"  register "," int      "=>" register
				| "floadAO"  register "," register "=>" register
				| "fstore"   register              "=>" register
				| "fstoreAI" register              "=>" register "," int
				| "fstoreAO" register              "=>" register "," register
				
				// I/O Instructions:
				| "fread"    register
				| "iread"    register
				| "fwrite"   register
				| "iwrite"   register
				| "swrite"   register
				
				// Branch Instructions:
				| "jumpI"                          "->" label
				| "jump"                           "->" register
				| "ret"
				| "cbr"      register              "->" label
				| "cbrne"    register              "->" label
				| "cbr_LT"   register "," register "->" label
				| "cbr_LE"   register "," register "->" label
				| "cbr_GT"   register "," register "->" label
				| "cbr_GE"   register "," register "->" label
				| "cbr_EQ"   register "," register "->" label
				| "cbr_NE"   register "," register "->" label
				
				// Undocumented Instructions:
				| "nop"
				| "call"  label ("," register)*
				| "icall" label ("," register)* "=>" register
				| "iret"                             register
			)
		)*
	)*
`;













