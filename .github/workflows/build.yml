
# vim: set noai ts=2 sw=2 expandtab:

name: Build & Test

on:
  push:
    # branches: [ "main", "dev" ]

jobs:
  job-name:
    stage: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: make buildtype=debug dotout=no verbose=no
    artifacts:
    paths:
      - binaries/

#  json-example-debug:
#    runs-on: ubuntu-latest
#    stage: test
#    needs: [build-debug]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Generate JSON Example
#      run: make buildtype=debug dotout=no verbose=no run ARGS="-vl -i ./-examples/json/json.zb -o ./-examples/json/json"

#  build-test:
#    runs-on: ubuntu-latest
#    stage: build

#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Build Test
#      run: make buildtype=test dotout=no verbose=no
#    - name: Build Test (with verbose)
#      run: make buildtype=test dotout=no verbose=yes
#    - name: Build Test (with dotout)
#      run: make buildtype=test dotout=yes verbose=no
#    - name: Build Test (with verbose)
#      run: make buildtype=test dotout=yes verbose=yes

#  json-example-test:
#    runs-on: ubuntu-latest
#    stage: test
#    needs: [build-test]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Generate JSON Example
#      run: make buildtype=test dotout=no verbose=no run ARGS="-vl -i ./-examples/json/json.zb -o ./-examples/json/json"

#  json-example-test-really-just-tables:
#    runs-on: ubuntu-latest
#    stage: test
#    needs: [json-example-test]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Generate JSON Example
#      run: make buildtype=test dotout=no verbose=no run ARGS="-vl -t really-just-tables -i ./-examples/json/json.zb -o ./-examples/json/json"

#  json-example-test-fileio-with-driver:
#    runs-on: ubuntu-latest
#    stage: test
#    needs: [json-example-test]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install -y valgrind

#    - name: Generate JSON Example
#      run: make buildtype=test dotout=no verbose=no run ARGS="-vl -t fileio-with-driver -i ./-examples/json/json.zb -o ./-examples/json/json"

#    - name: Compile JSON Example (-D DEBUG)
#      run: gcc -Wall -Werror -D DEBUG ./-examples/json/json.c -o /tmp/json

#    - name: Run JSON Example (-D DEBUG)
#      run: valgrind /tmp/json ./-examples/json/input.json

#    - name: Compile JSON Example
#      run: gcc -Wall -Werror ./-examples/json/json.c -o /tmp/json

#    - name: Run JSON Example
#      run: valgrind /tmp/json ./-examples/iloc/input.json

#  build-release:
#    runs-on: ubuntu-latest
#    stage: build

#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Build Release
#      run: make buildtype=release dotout=no verbose=no
#    - name: Build Release (with verbose)
#      run: make buildtype=release dotout=no verbose=yes
#    - name: Build Release (with dotout)
#      run: make buildtype=release dotout=yes verbose=no
#    - name: Build Release (with verbose)
#      run: make buildtype=release dotout=yes verbose=yes

#  iloc-example:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install -y valgrind

#    - name: Generate Iloc Example
#      run: make buildtype=test verbose=no run ARGS="-vl -t fileio-with-driver -i ./-examples/iloc/iloc2.zb -o ./-examples/iloc/iloc2"

#    - name: Compile Iloc Example
#      run: gcc -Wall -Werror -D DEBUG ./-examples/iloc/iloc2.c -o /tmp/test

#    - name: Run Iloc Example
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

#  zebu-example:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate Zebu Example
#      run: make buildtype=test verbose=no run ARGS="-vl -t fileio-with-driver -i ./-examples/zebu/zebu.zb -o ./-examples/zebu/zebu"

#    - name: Compile Zebu Example
#      run: gcc -Wall -Werror -D DEBUG ./-examples/zebu/zebu.c -o /tmp/test

#    - name: Run Zebu Example
#      run: valgrind /tmp/test ./-examples/zebu/zebu.zb

#  release-build:
#    runs-on: ubuntu-latest
#    needs: [iloc-example, json-example, zebu-example]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Build Release
#      run: make

#  release-iloc-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate Iloc Example
#      run: make run ARGS="-vl -t fileio-with-driver -i ./-examples/iloc/iloc2.zb -o ./-examples/iloc/iloc2"

#    - name: Compile Iloc Example
#      run: gcc -Wall -Werror ./-examples/iloc/iloc2.c -o /tmp/test

#    - name: Run Iloc Example
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

#  release-json-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate JSON Example
#      run: make run ARGS="-vl -t fileio-with-driver -i ./-examples/json/json.zb -o ./-examples/json/json"
#      
#    - name: Compile JSON Example
#      run: gcc -Wall -Werror ./-examples/json/json.c -o /tmp/test

#    - name: Run JSON Example
#      run: valgrind /tmp/test ./-examples/json/input.json

#  release-zebu-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate zebu Example
#      run: make run ARGS="-vl -t fileio-with-driver -i ./-examples/zebu/zebu.zb -o ./-examples/zebu/zebu"
#      
#    - name: Compile zebu Example
#      run: gcc -Wall -Werror ./-examples/zebu/zebu.c -o /tmp/test

#    - name: Run zebu Example
#      run: valgrind /tmp/test ./-examples/zebu/zebu.zb



















