
# vim: set noai ts=2 sw=2 expandtab:

name: Build & Test

on:
  push:
     branches: [ "main", "dev" ]

jobs:
  build-debug:
    runs-on: ubuntu-latest
    name: Debug-Build
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Debug
      run: make buildtype=debug dotout=no verbose=no
    - name: Build Debug (with verbose)
      run: make buildtype=debug dotout=no verbose=yes
    - name: Build Debug (with dotout)
      run: make buildtype=debug dotout=yes verbose=no
    - name: Build Debug (with verbose)
      run: make buildtype=debug dotout=yes verbose=yes

  json-example-debug:
    runs-on: ubuntu-latest
    name: JSON Example
    needs: [build-debug]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate JSON Example
      run: make buildtype=debug dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/json/json.zb -o ./-examples/json/json"

  build-test:
    runs-on: ubuntu-latest
    name: Test-Build

    steps:
    - uses: actions/checkout@v3
    
    - name: Build Test
      run: make buildtype=test dotout=no verbose=no
    - name: Build Test (with verbose)
      run: make buildtype=test dotout=no verbose=yes
    - name: Build Test (with dotout)
      run: make buildtype=test dotout=yes verbose=no
    - name: Build Test (with verbose)
      run: make buildtype=test dotout=yes verbose=yes

  json-example-test:
    runs-on: ubuntu-latest
    name: JSON Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/json/json.zb -o /tmp/unused"
    - name: Generate Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t just-tables -i ./-examples/json/json.zb -o /tmp/unused"
    - name: Generate Really-Just-Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t really-just-tables -i ./-examples/json/json.zb -o /tmp/unused"

  json-example-test-fileio-with-driver:
    runs-on: ubuntu-latest
    name: Fileio with Driver (input.json)
    needs: [json-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate JSON Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/json/json.zb -o ./-examples/json/json"

    - name: Compile JSON Example (-D ZEBU_DEBUG)
      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/json/json.c -o /tmp/json

    - name: Run JSON Example (-D ZEBU_DEBUG)
      run: valgrind /tmp/json ./-examples/json/input.json

    - name: Compile JSON Example
      run: gcc -Wall -Werror ./-examples/json/json.c -o /tmp/json

    - name: Run JSON Example
      run: valgrind /tmp/json ./-examples/json/input.json

  json-example-test-readline-with-driver:
    runs-on: ubuntu-latest
    name: Readline with Driver ([1, 2, 3])
    needs: [json-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate JSON Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t readline-with-driver -i ./-examples/json/json.zb -o ./-examples/json/json"

    - name: Compile JSON Example (-D ZEBU_DEBUG)
      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/json/json.c -lreadline -o /tmp/json

    - name: Run JSON Example (-D ZEBU_DEBUG)
      run: echo '[1, 2, 3]' | valgrind /tmp/json ./-examples/json/input.json

    - name: Compile JSON Example
      run: gcc -Wall -Werror ./-examples/json/json.c -lreadline -o /tmp/json

    - name: Run JSON Example
      run: echo '[1, 2, 3]' | valgrind /tmp/json ./-examples/json/input.json

  calc-example-test:
    runs-on: ubuntu-latest
    name: Calc Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/calc/parser.zb -o /tmp/unused"

  calc-example-test-readline:
    runs-on: ubuntu-latest
    name: Readline
    needs: [calc-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t readline -i ./-examples/calc/parser.zb -o ./-examples/calc/parser"

    - name: Test 2
      run: echo '2' | make -C ./-examples/calc valrun
    - name: Test 2 + 3
      run: echo '2 + 3' | make -C ./-examples/calc valrun
    - name: Test 2 - 3
      run: echo '2 - 3' | make -C ./-examples/calc valrun
    - name: Test 2 * 3
      run: echo '2 * 3' | make -C ./-examples/calc valrun
    - name: Test 2 / 3
      run: echo '2 / 3' | make -C ./-examples/calc valrun
    - name: Test 2 ** 3
      run: echo '2 ** 3' | make -C ./-examples/calc valrun
    - name: Test sin(pi)
      run: echo 'sin(pi)' | make -C ./-examples/calc valrun
    - name: Test cos(pi)
      run: echo 'cos(pi)' | make -C ./-examples/calc valrun
    - name: Test tan(pi)
      run: echo 'tan(pi)' | make -C ./-examples/calc valrun

  iloc1-example-test:
    runs-on: ubuntu-latest
    name: Iloc (Regex) Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Example
      run: make buildtype=test dotout=no verbose=no run ARGS="-vm -i ./-examples/iloc/iloc1.zb -o /tmp/unused"
    - name: Generate Just Tables
      run: make buildtype=test dotout=no verbose=no run ARGS="-vm -t just-tables -i ./-examples/iloc/iloc1.zb -o /tmp/unused"
    - name: Generate Really Just Tables
      run: make buildtype=test dotout=no verbose=no run ARGS="-vm -t really-just-tables -i ./-examples/iloc/iloc1.zb -o /tmp/unused"

  iloc1-test-fileio-with-driver:
    runs-on: ubuntu-latest
    name: Fileio with Driver (dynamic.il)
    needs: [iloc1-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Iloc Example
      run: make buildtype=test dotout=no verbose=no run ARGS="-vm -t fileio-with-driver -i ./-examples/iloc/iloc1.zb -o ./-examples/iloc/iloc1"

    - name: Compile Iloc Example (-D ZEBU_DEBUG)
      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/iloc/iloc1.c -o /tmp/test

    - name: Run Iloc Example (-D ZEBU_DEBUG)
      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

    - name: Compile Iloc Example
      run: gcc -Wall -Werror ./-examples/iloc/iloc1.c -o /tmp/test

    - name: Run Iloc Example
      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

  iloc2-example-test:
    runs-on: ubuntu-latest
    name: Iloc (Mix) Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/iloc/iloc2.zb -o /tmp/unused"
    - name: Generate Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t just-tables -i ./-examples/iloc/iloc2.zb -o /tmp/unused"
    - name: Generate Really Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t really-just-tables -i ./-examples/iloc/iloc2.zb -o /tmp/unused"

  iloc2-test-fileio-with-driver:
    runs-on: ubuntu-latest
    name: Fileio with Driver (dynamic.il)
    needs: [iloc2-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Iloc Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/iloc/iloc2.zb -o ./-examples/iloc/iloc2"

    - name: Compile Iloc Example (-D ZEBU_DEBUG)
      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/iloc/iloc2.c -o /tmp/test

    - name: Run Iloc Example (-D ZEBU_DEBUG)
      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

    - name: Compile Iloc Example
      run: gcc -Wall -Werror ./-examples/iloc/iloc2.c -o /tmp/test

    - name: Run Iloc Example
      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

# this example takes too much memory for GitHub to handle...

#  iloc3-example-test:
#    runs-on: ubuntu-latest
#    name: Iloc (Grammar) Example
#    needs: [build-test]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install -y valgrind

#    - name: Generate Example
#      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/iloc/iloc3.zb -o /tmp/unused"
#    - name: Generate Just Tables
#      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t just-tables -i ./-examples/iloc/iloc3.zb -o /tmp/unused"
#    - name: Generate Really Just Tables
#      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t really-just-tables -i ./-examples/iloc/iloc3.zb -o /tmp/unused"

#  iloc3-test-fileio-with-driver:
#    runs-on: ubuntu-latest
#    name: Fileio with Driver (dynamic.il)
#    needs: [iloc3-example-test]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install -y valgrind

#    - name: Generate Iloc Example
#      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/iloc/iloc3.zb -o ./-examples/iloc/iloc3"

#    - name: Compile Iloc Example (-D ZEBU_DEBUG)
#      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/iloc/iloc3.c -o /tmp/test

#    - name: Run Iloc Example (-D ZEBU_DEBUG)
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

#    - name: Compile Iloc Example
#      run: gcc -Wall -Werror ./-examples/iloc/iloc3.c -o /tmp/test

#    - name: Run Iloc Example
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

  lisp-example-test:
    runs-on: ubuntu-latest
    name: Lisp Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/lisp/parser.zb -o /tmp/unused"
    - name: Generate Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t just-tables -i ./-examples/lisp/parser.zb -o /tmp/unused"
    - name: Generate Really Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t really-just-tables -i ./-examples/lisp/parser.zb -o /tmp/unused"

  lisp-test-fileio-with-driver:
    runs-on: ubuntu-latest
    name: Fileio (input.lisp)
    needs: [lisp-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Lisp Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t fileio -i ./-examples/lisp/parser.zb -o ./-examples/lisp/parser"

    - name: Build & Run Example
      run: make -C ./-examples/lisp valrun-leak

  zebu-example-test:
    runs-on: ubuntu-latest
    name: Zebu Example
    needs: [build-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -i ./-examples/zebu/zebu.zb -o /tmp/unused"
    - name: Generate Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t just-tables -i ./-examples/zebu/zebu.zb -o /tmp/unused"
    - name: Generate Really Just Tables
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t really-just-tables -i ./-examples/zebu/zebu.zb -o /tmp/unused"

  zebu-test-fileio-with-driver:
    runs-on: ubuntu-latest
    name: Fileio with Driver (zebu.zb)
    needs: [zebu-example-test]
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependences
      run: sudo apt install -y valgrind

    - name: Generate Zebu Example
      run: make buildtype=test dotout=no verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/zebu/zebu.zb -o ./-examples/zebu/zebu"

    - name: Compile Zebu Example (-D ZEBU_DEBUG)
      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/zebu/zebu.c -o /tmp/test

    - name: Run Zebu Example (-D ZEBU_DEBUG)
      run: valgrind /tmp/test ./-examples/zebu/zebu.zb

    - name: Compile Zebu Example
      run: gcc -Wall -Werror ./-examples/zebu/zebu.c -o /tmp/test

    - name: Run Zebu Example
      run: valgrind /tmp/test ./-examples/zebu/zebu.zb

  build-release:
    runs-on: ubuntu-latest
    name: Release Build
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Release
      run: make buildtype=release dotout=no verbose=no
    - name: Build Release (with verbose)
      run: make buildtype=release dotout=no verbose=yes
    - name: Build Release (with dotout)
      run: make buildtype=release dotout=yes verbose=no
    - name: Build Release (with verbose)
      run: make buildtype=release dotout=yes verbose=yes

#  iloc-example:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install -y valgrind

#    - name: Generate Iloc Example
#      run: make buildtype=test verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/iloc/iloc2.zb -o ./-examples/iloc/iloc2"

#    - name: Compile Iloc Example
#      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/iloc/iloc2.c -o /tmp/test

#    - name: Run Iloc Example
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

#  zebu-example:
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate Zebu Example
#      run: make buildtype=test verbose=no valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/zebu/zebu.zb -o ./-examples/zebu/zebu"

#    - name: Compile Zebu Example
#      run: gcc -Wall -Werror -D ZEBU_DEBUG ./-examples/zebu/zebu.c -o /tmp/test

#    - name: Run Zebu Example
#      run: valgrind /tmp/test ./-examples/zebu/zebu.zb

#  release-build:
#    runs-on: ubuntu-latest
#    needs: [iloc-example, json-example, zebu-example]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Build Release
#      run: make

#  release-iloc-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate Iloc Example
#      run: make valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/iloc/iloc2.zb -o ./-examples/iloc/iloc2"

#    - name: Compile Iloc Example
#      run: gcc -Wall -Werror ./-examples/iloc/iloc2.c -o /tmp/test

#    - name: Run Iloc Example
#      run: valgrind /tmp/test ./-examples/iloc/dynamic.il

#  release-json-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate JSON Example
#      run: make valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/json/json.zb -o ./-examples/json/json"
#      
#    - name: Compile JSON Example
#      run: gcc -Wall -Werror ./-examples/json/json.c -o /tmp/test

#    - name: Run JSON Example
#      run: valgrind /tmp/test ./-examples/json/input.json

#  release-zebu-example:
#    runs-on: ubuntu-latest
#    needs: [release-build]
#    steps:
#    - uses: actions/checkout@v3
#    
#    - name: Install Dependences
#      run: sudo apt install valgrind

#    - name: Generate zebu Example
#      run: make valrun-leak ARGS="-vm -t fileio-with-driver -i ./-examples/zebu/zebu.zb -o ./-examples/zebu/zebu"
#      
#    - name: Compile zebu Example
#      run: gcc -Wall -Werror ./-examples/zebu/zebu.c -o /tmp/test

#    - name: Run zebu Example
#      run: valgrind /tmp/test ./-examples/zebu/zebu.zb



















